# forest_app/modules/hta_models.py
"""
Pydantic models for representing and validating Hierarchical Task Analysis (HTA)
tree structures, potentially generated by an LLM.
"""
from __future__ import annotations # Required for recursive type hints in Pydantic v1/v2

import logging
import uuid
from typing import List, Optional
from pydantic import BaseModel, Field

logger = logging.getLogger(__name__)

# --- HTA Node Model ---
class HTANodeModel(BaseModel):
    """Pydantic model for validating a single HTA node structure from LLM."""
    id: str = Field(default_factory=lambda: str(uuid.uuid4()), description="Unique identifier for the node.")
    title: str = Field(..., max_length=150, description="Concise title for the HTA step.")
    description: str = Field(..., description="Detailed description of the HTA step.")
    priority: float = Field(default=0.5, ge=0.0, le=1.0, description="Priority score (0.0-1.0).")
    depends_on: List[str] = Field(default=[], description="List of IDs this node depends on.")
    estimated_energy: str = Field(default="medium", pattern="^(low|medium|high)$", description="Estimated energy cost ('low', 'medium', 'high').")
    estimated_time: str = Field(default="medium", pattern="^(low|medium|high)$", description="Estimated time cost ('low', 'medium', 'high').")
    # --- Optional AI Fields ---
    rationale: Optional[str] = Field(None, description="LLM's rationale for this node.")
    status_suggestion: Optional[str] = Field(None, pattern="^(pending|active|completed|pruned)$", description="LLM's suggested initial status.")
    # --- Recursive Children ---
    children: List[HTANodeModel] = Field(default=[], description="List of child HTA nodes.")

    class Config:
        extra = "ignore" # Ignore extra fields LLM might add

# --- HTA Response Model (Wrapper) ---
class HTAResponseModel(BaseModel):
    """Pydantic model for validating the overall HTA tree response from LLM."""
    hta_root: HTANodeModel = Field(..., description="The root node of the generated/modified HTA tree.")

    class Config:
        extra = "ignore"

# --- Make models easily importable ---
__all__ = [
    "HTANodeModel",
    "HTAResponseModel",
]

logger.debug("HTA Pydantic models defined in hta_models.py.")